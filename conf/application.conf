# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile

play.modules {
  # By default, Play will load any class called Module that is defined
  # in the root package (the "app" directory), or you can define them
  # explicitly below.
  # If there are any built-in modules that you want to disable, you can list them here.
  enabled += Module
  enabled += models.Module
  enabled += services.Module

  # If there are any built-in modules that you want to disable, you can list them here.
  #disabled += ""
}

//play.filters.disabled+=play.filters.csrf.CSRFFilter
//play.filters.disabled += play.filters.headers.SecurityHeadersFilter
//
//play.filters.enabled += play.filters.cors.CORSFilter

play.ws {

  useProxyProperties = false
}

play.filters {

  # Enabled filters are run automatically against Play.
  # CSRFFilter, AllowedHostFilters, and SecurityHeadersFilters are enabled by default.
  #enabled += filters.ExampleFilter
  enabled += play.filters.cors.CORSFilter

  # Disabled filters remove elements from the enabled list.
  disabled += play.filters.csrf.CSRFFilter
  disabled += play.filters.headers.SecurityHeadersFilter

  cors {
    # Filter paths by a whitelist of path prefixes
    #pathPrefixes = ["/some/path", ...]

    # The allowed origins. If null, all origins are allowed.
    #allowedOrigins = ["http://www.example.com"]
    allowedOrigins = null

    # The allowed HTTP methods. If null, all methods are allowed
    #allowedHttpMethods = ["GET", "POST"]
    allowedHttpMethods = null

    # GPortes - Foi necessário incluir - problema do CORS.
    serveForbiddenOrigins = true
  }

  ## CSRF Filter
  # https://www.playframework.com/documentation/latest/ScalaCsrf#Applying-a-global-CSRF-filter
  # https://www.playframework.com/documentation/latest/JavaCsrf#Applying-a-global-CSRF-filter
  # ~~~~~
  # Play supports multiple methods for verifying that a request is not a CSRF request.
  # The primary mechanism is a CSRF token. This token gets placed either in the query string
  # or body of every form submitted, and also gets placed in the users session.
  # Play then verifies that both tokens are present and match.
  csrf {
    # Sets the cookie to be sent only over HTTPS
    #cookie.secure = true

    # Defaults to CSRFErrorHandler in the root package.
    #errorHandler = MyCSRFErrorHandler
  }

  ## Security headers filter configuration
  # https://www.playframework.com/documentation/latest/SecurityHeaders
  # ~~~~~
  # Defines security headers that prevent XSS attacks.
  # If enabled, then all options are set to the below configuration by default:
  headers {
    # The X-Frame-Options header. If null, the header is not set.
    #frameOptions = "DENY"

    # The X-XSS-Protection header. If null, the header is not set.
    #xssProtection = "1; mode=block"

    # The X-Content-Type-Options header. If null, the header is not set.
    #contentTypeOptions = "nosniff"

    # The X-Permitted-Cross-Domain-Policies header. If null, the header is not set.
    #permittedCrossDomainPolicies = "master-only"

    # The Content-Security-Policy header. If null, the header is not set.
    #contentSecurityPolicy = "default-src 'self'"
    contentSecurityPolicy = "script-src 'self' 'unsafe-inline' 'unsafe-eval'"
  }

  ## Allowed hosts filter configuration
  # https://www.playframework.com/documentation/latest/AllowedHostsFilter
  # ~~~~~
  # Play provides a filter that lets you configure which hosts can access your application.
  # This is useful to prevent cache poisoning attacks.
  hosts {
    # Allow requests to example.com, its subdomains, and localhost:9000.
    #allowed = [".example.com", "localhost:9000"]
    #allowed = [ "localhost", "172.30.20.125:9000", "172.30.20.125:9999", "172.30.20.225:81", "172.30.20.225:82" ]
    allowed = [ "." ]
  }

}

## Liberar requisições Ajax - GPortes
#
play.filters.csrf.header.bypassHeaders {
  X-Requested-With = "*"
  Csrf-Token = "nocheck"
}

## Play HTTP settings
# ~~~~~
play.http {

  ## ErrorHandler
  # https://www.playframework.com/documentation/latest/JavaRouting
  # https://www.playframework.com/documentation/latest/ScalaRouting
  # ~~~~~
  # If null, will attempt to load a class called ErrorHandler in the root package,
  #errorHandler = null
  errorHandler = "system.ErrorHandler"
}



##
# GPortes:  (  https://playframework.com/documentation/2.6.x/ApplicationSecret )
#
# Apos deploy subir a aplicacao passando o argumento abaixo:
#
#     -Dplay.http.secret.key='QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB`R5W:1uDFN];Ik@n'
play.http.secret.key = "QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB`R5W:1uDFN];Ik@n"

## https://www.playframework.com/documentation/2.4.x/ScalaBodyParsers#Max-content-length
#  Tive que aumentar o tamanho do arquivo recebido quando o usuário faz relacionamento de riscos de trabalho.
#  Podem chegar listas com mais de 1000 itens - Alysson Myller 04/05/2018
#
play.http.parser.maxMemoryBuffer=2MB

##
# GPortes: Indica ambiente de desenvolvimento.
site.ambiente="desenv"
